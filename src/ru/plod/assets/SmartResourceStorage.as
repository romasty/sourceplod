package ru.plod.assets {	import flash.display.DisplayObjectContainer;	import flash.display.Loader;	import flash.system.ApplicationDomain;	/**	 * Created with IntelliJ IDEA.	 * User: Romasty	 * Date: 24.01.14	 * Time: 13:05	 * To change this template use File | Settings | File Templates.	 */	public class SmartResourceStorage implements IResourceStorage {		protected var _storageList:Vector.<IResourceStorage>;		public function SmartResourceStorage() {		}		public function addSource(source : Object) : void		{			var storage : IResourceStorage;			if(source is DisplayObjectContainer) {				storage = new DisplayListStorage(source as DisplayObjectContainer);			} else if(source is ApplicationDomain) {				storage = new DomainStorage(source as ApplicationDomain);			} else if(source is IResourceStorage) {				storage = source as IResourceStorage;			} else {			}			if(storage == null) return;			for each (var resourceStorage:IResourceStorage in _storageList) {				if(resourceStorage == storage) return;			}			_storageList.push(storage);		}		public function getSource(key:*):Object {			for each (var storage:IResourceStorage in _storageList) {				var result:Object = getSourceSafe(storage, key);				if (result) return result;			}			return null;		}		public function getSourceList(key : *) : Vector.<*>		{			var resultList : Vector.<*> = new Vector.<*>();			for each (var storage:IResourceStorage in _storageList) {				var result:Object = getSourceSafe(storage, key);				if (result) resultList.push(result);			}			return resultList;		}		private function getSourceSafe(storage:IResourceStorage, key:*):Object {			var result:Object;			try {				result = storage.getSource(key);			} catch (err:Error) {			} finally {				return result;			}		}	}}